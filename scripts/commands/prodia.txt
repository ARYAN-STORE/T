const axios = require('axios');
const { Buffer } = require('buffer'); // Node.js Buffer library
const PRODIA_BASE = 'https://api.prodia.com';
const PRODIA_IMAGE = 'https://images.prodia.xyz';

// Assuming models are defined in a mapping object similar to:
const models = {
    "1": "3Guofeng3_v34.safetensors+%5B50f420de%5D",
    "2": "absolutereality_V16.safetensors+%5B37db0fc3%5D",
    "3": "absolutereality_v181.safetensors+%5B3d9d4d2b%5D",
    "4": "amIReal_V41.safetensors+%5B0a8a2e61%5D",
    "5": "analog-diffusion-1.0.ckpt+%5B9ca13f02%5D",
    "6": "anythingv3_0-pruned.ckpt+%5B2700c435%5D",
    "7": "anything-v4.5-pruned.ckpt+%5B65745d25%5D",
    "8": "anythingV5_PrtRE.safetensors+%5B893e49b9%5D",
    "9": "AOM3A3_orangemixs.safetensors+%5B9600da17%5D",
    "10": "blazing_drive_v10g.safetensors+%5Bca1c1eab%5D",
    "11": "breakdomain_I2428.safetensors+%5B43cc7d2f%5D",
    "12": "breakdomain_M2150.safetensors+%5B15f7afca%5D",
    "13": "cetusMix_Version35.safetensors+%5Bde2f2560%5D",
    "14": "childrensStories_v13D.safetensors+%5B9dfaabcb%5D",
    "15": "childrensStories_v1SemiReal.safetensors+%5Ba1c56dbb%5D",
    "16": "childrensStories_v1ToonAnime.safetensors+%5B2ec7b88b%5D",
    "17": "Counterfeit_v30.safetensors+%5B9e2a8f19%5D",
    "18": "cuteyukimixAdorable_midchapter3.safetensors+%5B04bdffe6%5D",
    "19": "cyberrealistic_v33.safetensors+%5B82b0d085%5D",
    "20": "dalcefo_v4.safetensors+%5B425952fe%5D",
    "21": "deliberate_v2.safetensors+%5B10ec4b29%5D",
    "22": "deliberate_v3.safetensors+%5Bafd9d2d4%5D",
    "23": "dreamlike-anime-1.0.safetensors+%5B4520e090%5D",
    "24": "dreamlike-diffusion-1.0.safetensors+%5B5c9fd6e0%5D",
    "25": "dreamlike-photoreal-2.0.safetensors+%5Bfdcf65e7%5D",
    "26": "dreamshaper_6BakedVae.safetensors+%5B114c8abb%5D",
    "27": "dreamshaper_7.safetensors+%5B5cf5ae06%5D",
    "28": "dreamshaper_8.safetensors+%5B9d40847d%5D",
    "29": "edgeOfRealism_eorV20.safetensors+%5B3ed5de15%5D",
    "30": "EimisAnimeDiffusion_V1.ckpt+%5B4f828a15%5D",
    "31": "elldreths-vivid-mix.safetensors+%5B342d9d26%5D",
    "32": "epicphotogasm_xPlusPlus.safetensors+%5B1a8f6d35%5D",
    "33": "epicrealism_naturalSinRC1VAE.safetensors+%5B90a4c676%5D",
    "34": "epicrealism_pureEvolutionV3.safetensors+%5B42c8440c%5D",
    "35": "ICantBelieveItsNotPhotography_seco.safetensors+%5B4e7a3dfd%5D",
    "36": "indigoFurryMix_v75Hybrid.safetensors+%5B91208cbb%5D",
    "37": "juggernaut_aftermath.safetensors+%5B5e20c455%5D",
    "38": "lofi_v4.safetensors+%5Bccc204d6%5D",
    "39": "lyriel_v16.safetensors+%5B68fceea2%5D",
    "40": "majicmixRealistic_v4.safetensors+%5B29d0de58%5D",
    "41": "mechamix_v10.safetensors+%5Bee685731%5D",
    "42": "meinamix_meinaV9.safetensors+%5B2ec66ab0%5D",
    "43": "meinamix_meinaV11.safetensors+%5Bb56ce717%5D",
    "44": "neverendingDream_v122.safetensors+%5Bf964ceeb%5D",
    "45": "openjourney_V4.ckpt+%5Bca2f377f%5D",
    "46": "pastelMixStylizedAnime_pruned_fp16.safetensors+%5B793a26e8%5D",
    "47": "portraitplus_V1.0.safetensors+%5B1400e684%5D",
    "48": "protogenx34.safetensors+%5B5896f8d5%5D",
    "49": "Realistic_Vision_V1.4-pruned-fp16.safetensors+%5B8d21810b%5D",
    "50": "Realistic_Vision_V2.0.safetensors+%5B79587710%5D",
    "51": "Realistic_Vision_V4.0.safetensors+%5B29a7afaa%5D",
    "52": "Realistic_Vision_V5.0.safetensors+%5B614d1063%5D",
    "53": "redshift_diffusion-V10.safetensors+%5B1400e684%5D",
    "54": "revAnimated_v122.safetensors+%5B3f4fefd9%5D",
    "55": "rundiffusionFX25D_v10.safetensors+%5Bcd12b0ee%5D",
    "56": "rundiffusionFX_v10.safetensors+%5Bcd4e694d%5D",
    "57": "sdv1_4.ckpt+%5B7460a6fa%5D",
    "58": "v1-5-pruned-emaonly.safetensors+%5Bd7049739%5D",
    "59": "v1-5-inpainting.safetensors+%5B21c7ab71%5D",
    "60": "shoninsBeautiful_v10.safetensors+%5B25d8c546%5D",
    "61": "theallys-mix-ii-churned.safetensors+%5B5d9225a4%5D",
    "62": "timeless-1.0.ckpt+%5B7c4971d4%5D",
    "63": "toonyou_beta6.safetensors+%5B980f6b15%5D",
    // Add more models as needed
};

module.exports = {
    config: {
        name: "prodia",
        alias: ["genimg", "imagine"],
        role: 0,
        cooldowns: 5,
        version: '1.0.0',
        author: 'Your Name',
        category: "ai",
        description: "Generate AI images of a prompt through prodia.",
        usage: "!prodia <prompt> | [modelnumber]",
    },
    
    onStart: async function({ bot, chatId, args }) {
        try {
            // Extract prompt and model (optional)
            let prompt = args[0] || "_";
            let modelNumberString = args[1] || "3"; // Default to model number 3 if not provided

            if (!prompt) {
                await bot.sendMessage(chatId, "Please provide prompt to generate image.");
                return;
            }

            // Parse model number (handle invalid values)
            let modelNumber = parseInt(modelNumberString, 10);
            if (isNaN(modelNumber) || modelNumber < 1 || modelNumber > Object.keys(models).length) {
                modelNumber = 3; // Default to model number 3 if invalid or not provided
            }

            // Get the model name from the models mapping
            const modelName = models[modelNumber.toString()]; // Convert number back to string for lookup

            const negprompt = "Blurry, unclear"; // Optional negative prompt

            // Send initial message indicating image generation
            const genmsg = await bot.sendMessage(chatId, 'Generating image...');

            // Construct API URL
            const apiUrl = `${PRODIA_BASE}/generate?new=true&prompt=${prompt}&model=${modelName}${negprompt ? '&negative_prompt=' + negprompt : ''}&steps=20&cfg=7&seed=3434447233&sampler=DPM%2B%2B+2M+Karras&aspect_ratio=square`;

            // Make API request to generate image
            const response = await axios.get(apiUrl);

            if (!response.data.success) {
                throw new Error(`Failed to generate image: ${response.data.message}`);
            }

            const jobId = response.data.job;

            // Introduce a delay before accessing the image URL (5 seconds)
            console.log("Waiting 5 seconds for image processing...");
            await new Promise(resolve => setTimeout(resolve, 5000));

            const imageUrl = `${PRODIA_IMAGE}/${jobId}.png`;

            // Fetch the image data
            const imageResponse = await axios.get(imageUrl, { responseType: 'arraybuffer' });

            if (!imageResponse.data) {
                throw new Error(`Failed to download image: ${imageResponse.status}`);
            }

            const buffer = Buffer.from(imageResponse.data);

            // Send the image and text together
            await bot.sendPhoto(chatId, { source: buffer }, {
                caption: `Generated image based on: ${prompt}\nModel: ${modelName}`
            });

            // Clean up messages
            await bot.deleteMessage(chatId, genmsg.message_id);

        } catch (error) {
            console.error('Error generating or sending image:', error);
            await bot.sendMessage(chatId, "An error occurred while generating the image.");
        }
    }
};
